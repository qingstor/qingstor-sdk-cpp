// +-------------------------------------------------------------------------
// | Copyright (C) 2017 Yunify, Inc.
// +-------------------------------------------------------------------------
// | Licensed under the Apache License, Version 2.0 (the "License");
// | you may not use this work except in compliance with the License.
// | You may obtain a copy of the License in the LICENSE file, or at:
// |
// | http://www.apache.org/licenses/LICENSE-2.0
// |
// | Unless required by applicable law or agreed to in writing, software
// | distributed under the License is distributed on an "AS IS" BASIS,
// | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// | See the License for the specific language governing permissions and
// | limitations under the License.
// +-------------------------------------------------------------------------

{{$service := .Data.Service}}
{{$className := $service.Name}}
#pragma once

#include  "QsSdkOption.h"
#include  "Bucket.h"

namespace QingStor
{

// SDK wide options
struct QS_SDK_API SDKOptions
{
    SDKOptions():initAndCleanupCurl(true), logLevel(None), logPath("")
    {
    }
    // SDK wide options for curl
    // If it is being used then we automatically initialize and clean it up.
    // If this is a problem for you, set this to false. 
    bool initAndCleanupCurl;

    // Option for logging level ,defaults to Off
    LogLevel logLevel;

    // Option for logging file path, defaults to the path of the executable program.
    std::string logPath;
};

// This method should be called brfore using the SDK.
QS_SDK_API void InitializeSDK(const SDKOptions & options);

// This method should be called when you are finished using the SDK.
// Do not call any other SDK methods after calling ShutdownSDK.
QS_SDK_API void ShutdownSDK(const SDKOptions & options);


// +--------------------------------------------------------------------
// |                     InputClassHeader                              
// +--------------------------------------------------------------------
{{- range $_, $operation := $service.Operations}}
{{template "InputClassHeader" passThrough $service $operation}}
{{- end}}


// +--------------------------------------------------------------------
// |                     OutputClassHeader                              
// +--------------------------------------------------------------------

{{- range $_, $operation := $service.Operations}}
{{template "OutputClassHeader" passThrough $service $operation}}
{{- end}}

// +--------------------------------------------------------------------
// |                     {{$className}}Service                              
// +--------------------------------------------------------------------

class QS_SDK_API QingStorService
{
  public:
    QingStorService(const QsConfig &qsConfig);

    virtual ~QingStorService(){};

    // ListBuckets does Retrieve the bucket list.
    // Documentation URL: https://docsv4.qingcloud.com/user_guide/storage/object_storage/api/service/get/
    QsError ListBuckets(ListBucketsInput &input,
                        ListBucketsOutput &output);

  private:
    QsConfig m_qsConfig;
    Properties m_properties;
};


}// namespace QingStor


